/* link list (連結串列) */
#include<stdio.h>
#include<string.h>
#include<stdlib.h>

/* 定義結構型態 */
typedef struct link_node{
    int data;
    struct link_node *next;
} NODE;

/* 產生新節點 */
NODE *new_node(int data){
    NODE *node;
    node = (NODE *) malloc(sizeof(NODE)); /* 動態宣告空間 <stdlib.h> */
    if(node == NULL) return NULL; // 記憶體不足
    node->data = data;
    node->next = NULL;
    return node;
}

/* 加入新的Node於最後 */
NODE *push_node(NODE *head, int data){
    NODE *node = new_node(data); /*產生新節點*/
    if(head == NULL)
        head = node; // 加入第一個新節點
    else{
        NODE *ptr = head;
        while( ptr->next != NULL)  // 取得最後一個節點
            ptr = ptr->next;
        ptr->next = node;
    }
    return head;
}

/* 印出所有串列的所有資料 */
int traverse(NODE *ptr){
    while(ptr != NULL){
        printf("%d ", ptr->data);
        ptr = ptr->next;
    }
    printf("\n");
    return 1;
}

/*主程式*/
int main(){
    NODE *head = NULL;
    //加入第一個node的時候 因為原本head==NULL 因此要把新的node返回給head這個指標
    head = push_node(head, 13);
    push_node(head,2);
    push_node(head,7);
    push_node(head,9);
    push_node(head,14);
    traverse(head);

    //上面是預設的資料 下面可以再加入新的
    int a;
    while(1){
        printf("輸入資料加入串列 輸入0顯示結果:");
        scanf("%d",&a);
        if(a==0)
            break;
        push_node(head,a);
    }
    puts("結果為:");
    head=traverse(head);

    return 0;
}
